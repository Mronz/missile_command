/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Boom.ts":
/*!*********************!*\
  !*** ./src/Boom.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.drawBooms = exports.generateEnemyBoom = exports.generateUserBoom = exports.clearBooms = exports.booms = void 0;\r\nvar DefaultFunctions_1 = __webpack_require__(/*! ./DefaultFunctions */ \"./src/DefaultFunctions.ts\");\r\nvar FrameRender_1 = __webpack_require__(/*! ./FrameRender */ \"./src/FrameRender.ts\");\r\nvar Scoreboard_1 = __webpack_require__(/*! ./Scoreboard */ \"./src/Scoreboard.ts\");\r\nexports.booms = [];\r\nfunction clearBooms() {\r\n    exports.booms = [];\r\n}\r\nexports.clearBooms = clearBooms;\r\nfunction generateUserBoom(x, y) {\r\n    // radius = 9\r\n    var boom = {\r\n        x: x,\r\n        y: y,\r\n        size: 7,\r\n        actualSize: 1,\r\n        alive: true,\r\n        rise: true,\r\n        enemy: false\r\n    };\r\n    exports.booms.push(boom);\r\n    var song = new Audio();\r\n    song.src = '../data/soundBoom.mp3';\r\n    song.volume = FrameRender_1.volume ? 0.5 : 0;\r\n    song.play();\r\n}\r\nexports.generateUserBoom = generateUserBoom;\r\nfunction generateEnemyBoom(x, y) {\r\n    // radius = 9\r\n    var boom = {\r\n        x: x,\r\n        y: y,\r\n        size: 7,\r\n        actualSize: 1,\r\n        alive: true,\r\n        rise: true,\r\n        enemy: true\r\n    };\r\n    exports.booms.push(boom);\r\n    var song = new Audio();\r\n    song.src = '../data/soundBoom.mp3';\r\n    song.volume = FrameRender_1.volume ? 0.5 : 0;\r\n    song.play();\r\n}\r\nexports.generateEnemyBoom = generateEnemyBoom;\r\nfunction drawBooms() {\r\n    exports.booms.forEach(function (element) {\r\n        if (element.rise)\r\n            element.actualSize += 1 / 8;\r\n        else\r\n            element.actualSize -= 1 / 8;\r\n        if (element.actualSize == element.size)\r\n            element.rise = false;\r\n        if (element.actualSize == 0)\r\n            element.alive = false;\r\n        var colors = [\"white\", \"#fff1c9\", \"#fec9ff\", \"#c9d2ff\", \"#c9d2ff\", \"#e86666\", \"#667ae8\"];\r\n        FrameRender_1.ctx.fillStyle = colors[Math.floor(Math.random() * colors.length)];\r\n        for (var i = -element.actualSize; i <= element.actualSize; i++) {\r\n            var yValue = Math.sqrt(Math.pow(element.actualSize, 2) - Math.pow(i, 2)) * FrameRender_1.pixelSize;\r\n            for (var j = 0; j <= yValue; j++) {\r\n                var x = Math.round((element.x - 1 / 2 * FrameRender_1.pixelSize + i * FrameRender_1.pixelSize) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n                var y1 = Math.floor((element.y - 1 / 2 * FrameRender_1.pixelSize + j) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n                var y2 = Math.ceil((element.y - 1 / 2 * FrameRender_1.pixelSize - j) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n                FrameRender_1.ctx.fillRect(x, y1, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n                FrameRender_1.ctx.fillRect(x, y2, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n            }\r\n        }\r\n        FrameRender_1.missiles.forEach(function (missile) {\r\n            var dist = (0, DefaultFunctions_1.distnceFromStartToTarget)(element.x, element.y, missile.currentX, missile.currentY);\r\n            if (dist < element.actualSize * FrameRender_1.pixelSize) {\r\n                missile.alive = false;\r\n                generateEnemyBoom(missile.currentX, missile.currentY);\r\n                if (!element.enemy)\r\n                    (0, Scoreboard_1.addPoints)(25);\r\n            }\r\n        });\r\n        FrameRender_1.planes.forEach(function (plane) {\r\n            var dist;\r\n            if (plane.leftDir)\r\n                dist = (0, DefaultFunctions_1.distnceFromStartToTarget)(element.x, element.y, plane.currentX + 4 * FrameRender_1.pixelSize, plane.y);\r\n            else\r\n                dist = (0, DefaultFunctions_1.distnceFromStartToTarget)(element.x, element.y, plane.currentX - 4 * FrameRender_1.pixelSize, plane.y);\r\n            if (dist < element.actualSize * FrameRender_1.pixelSize) {\r\n                plane.alive = false;\r\n                generateEnemyBoom(plane.currentX, plane.y);\r\n                if (!element.enemy)\r\n                    (0, Scoreboard_1.addPoints)(100);\r\n            }\r\n        });\r\n        FrameRender_1.UFOs.forEach(function (UFO) {\r\n            var dist;\r\n            if (UFO.leftDir)\r\n                dist = (0, DefaultFunctions_1.distnceFromStartToTarget)(element.x, element.y, UFO.currentX + 4 * FrameRender_1.pixelSize, UFO.currentY);\r\n            else\r\n                dist = (0, DefaultFunctions_1.distnceFromStartToTarget)(element.x, element.y, UFO.currentX - 4 * FrameRender_1.pixelSize, UFO.currentY);\r\n            if (dist < element.actualSize * FrameRender_1.pixelSize) {\r\n                UFO.alive = false;\r\n                generateEnemyBoom(UFO.currentX, UFO.currentY);\r\n                if (!element.enemy)\r\n                    (0, Scoreboard_1.addPoints)(100);\r\n            }\r\n        });\r\n        FrameRender_1.triangles.forEach(function (triangle) {\r\n            var dist = (0, DefaultFunctions_1.distnceFromStartToTarget)(element.x, element.y, triangle.currentX, triangle.currentY);\r\n            if (dist < 2.5 * FrameRender_1.pixelSize) {\r\n                triangle.alive = false;\r\n                generateEnemyBoom(triangle.currentX, triangle.currentY);\r\n                if (!element.enemy)\r\n                    (0, Scoreboard_1.addPoints)(125);\r\n            }\r\n            else if (dist < (element.actualSize + 1) * FrameRender_1.pixelSize) {\r\n                var angle = (0, DefaultFunctions_1.angleFromStartToTarget)(element.x, element.y, triangle.currentX, triangle.currentY);\r\n                triangle.currentX += (FrameRender_1.triangleSpeed * 3) * Math.sin(angle);\r\n                triangle.currentY += (FrameRender_1.triangleSpeed * 3) * -Math.cos(angle);\r\n            }\r\n        });\r\n    });\r\n    exports.booms = exports.booms.filter(function (element) {\r\n        return element.alive !== false;\r\n    });\r\n}\r\nexports.drawBooms = drawBooms;\r\n\n\n//# sourceURL=webpack://missile-command/./src/Boom.ts?");

/***/ }),

/***/ "./src/City.ts":
/*!*********************!*\
  !*** ./src/City.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.City = void 0;\r\nvar FrameRender_1 = __webpack_require__(/*! ./FrameRender */ \"./src/FrameRender.ts\");\r\nvar City = /** @class */ (function () {\r\n    function City(x, y) {\r\n        this.survived = false;\r\n        this.alive = true;\r\n        this.cityX = x;\r\n        this.cityY = y;\r\n    }\r\n    City.prototype.drawCity = function () {\r\n        if (this.alive) {\r\n            if (!this.survived) {\r\n                FrameRender_1.ctx.fillStyle = FrameRender_1.cityColor;\r\n                FrameRender_1.ctx.fillRect(this.cityX, this.cityY, 12 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n                FrameRender_1.ctx.fillRect(this.cityX, this.cityY - FrameRender_1.pixelSize, 11 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n                FrameRender_1.ctx.fillRect(this.cityX + FrameRender_1.pixelSize, this.cityY - 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n                FrameRender_1.ctx.fillRect(this.cityX + 2 * FrameRender_1.pixelSize, this.cityY - 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, 3 * FrameRender_1.pixelSize);\r\n                FrameRender_1.ctx.fillRect(this.cityX + 4 * FrameRender_1.pixelSize, this.cityY - 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize);\r\n                FrameRender_1.ctx.fillRect(this.cityX + 6 * FrameRender_1.pixelSize, this.cityY - 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize);\r\n                FrameRender_1.ctx.fillRect(this.cityX + 7 * FrameRender_1.pixelSize, this.cityY - 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n                FrameRender_1.ctx.fillRect(this.cityX + 9 * FrameRender_1.pixelSize, this.cityY - 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n            }\r\n        }\r\n    };\r\n    City.prototype.destroyCity = function () {\r\n        FrameRender_1.ctx.fillStyle = FrameRender_1.cityColor;\r\n        FrameRender_1.ctx.fillRect(this.cityX, this.cityY, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(this.cityX, this.cityY - FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(this.cityX + 10 * FrameRender_1.pixelSize, this.cityY, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillStyle = FrameRender_1.airColor;\r\n        FrameRender_1.ctx.fillRect(this.cityX + 4 * FrameRender_1.pixelSize, this.cityY + FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    };\r\n    City.prototype.drawSurvivedCity = function (x, y) {\r\n        FrameRender_1.ctx.fillStyle = FrameRender_1.cityColor;\r\n        FrameRender_1.ctx.fillRect(x, y, 12 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x, y - FrameRender_1.pixelSize, 11 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y - 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y - 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, 3 * FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y - 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x + 6 * FrameRender_1.pixelSize, y - 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x + 7 * FrameRender_1.pixelSize, y - 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x + 9 * FrameRender_1.pixelSize, y - 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    };\r\n    return City;\r\n}());\r\nexports.City = City;\r\n\n\n//# sourceURL=webpack://missile-command/./src/City.ts?");

/***/ }),

/***/ "./src/DefaultFunctions.ts":
/*!*********************************!*\
  !*** ./src/DefaultFunctions.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.filterPath = exports.distnceFromStartToTarget = exports.angleFromStartToTarget = exports.getRandomInt = void 0;\r\nvar FrameRender_1 = __webpack_require__(/*! ./FrameRender */ \"./src/FrameRender.ts\");\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\r\n}\r\nexports.getRandomInt = getRandomInt;\r\nfunction angleFromStartToTarget(startX, startY, targetX, targetY) {\r\n    return Math.atan2(targetY - startY, targetX - startX) + Math.PI / 2;\r\n}\r\nexports.angleFromStartToTarget = angleFromStartToTarget;\r\nfunction distnceFromStartToTarget(startX, startY, targetX, targetY) {\r\n    return Math.sqrt(Math.pow(startX - targetX, 2) + Math.pow(startY - targetY, 2));\r\n}\r\nexports.distnceFromStartToTarget = distnceFromStartToTarget;\r\nfunction filterPath(path) {\r\n    for (var i = 1; i < path.length - 1; i++) {\r\n        var element = path[i];\r\n        var el = element.split(\" \");\r\n        var x = parseInt(el[0]);\r\n        var y = parseInt(el[1]);\r\n        var element1 = path[i - 1];\r\n        var el1 = element1.split(\" \");\r\n        var x1 = parseInt(el1[0]);\r\n        var y1 = parseInt(el1[1]);\r\n        var element2 = path[i + 1];\r\n        var el2 = element2.split(\" \");\r\n        var x2 = parseInt(el2[0]);\r\n        var y2 = parseInt(el2[1]);\r\n        if (y1 == y && x2 == x && Math.abs(x1 - x) == FrameRender_1.pixelSize)\r\n            path = path.splice(i, 1);\r\n        if (y1 == y && x2 == x && Math.abs(y2 - y) == FrameRender_1.pixelSize)\r\n            path = path.splice(i, 1);\r\n        if (y2 == y && x1 == x && Math.abs(x2 - x) == FrameRender_1.pixelSize)\r\n            path = path.splice(i, 1);\r\n        if (y2 == y && x1 == x && Math.abs(y1 - y) == FrameRender_1.pixelSize)\r\n            path = path.splice(i, 1);\r\n    }\r\n    return path;\r\n}\r\nexports.filterPath = filterPath;\r\n\n\n//# sourceURL=webpack://missile-command/./src/DefaultFunctions.ts?");

/***/ }),

/***/ "./src/FrameRender.ts":
/*!****************************!*\
  !*** ./src/FrameRender.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.levelFinished = exports.destroySilo = exports.siloIsAlive = exports.numbersColor = exports.enemyObjectsColor = exports.airColor = exports.worldColor = exports.cityColor = exports.triangleSpeed = exports.triangles = exports.UFOs = exports.planes = exports.missileSpeed = exports.missiles = exports.triggers = exports.rocketSpeed = exports.rockets = exports.started = exports.startMissileY = exports.startMissileX = exports.mouse = exports.targetsY = exports.targetsX = exports.rocketsCount = exports.cities = exports.pixelSize = exports.time = exports.volume = exports.init = exports.ctx = exports.canvas = void 0;\r\nvar Main_1 = __webpack_require__(/*! ./Main */ \"./src/Main.ts\");\r\nvar Boom_1 = __webpack_require__(/*! ./Boom */ \"./src/Boom.ts\");\r\nvar Rocket_1 = __webpack_require__(/*! ./Rocket */ \"./src/Rocket.ts\");\r\nvar Trigger_1 = __webpack_require__(/*! ./Trigger */ \"./src/Trigger.ts\");\r\nvar Missile_1 = __webpack_require__(/*! ./Missile */ \"./src/Missile.ts\");\r\nvar PlaneAndUFO_1 = __webpack_require__(/*! ./PlaneAndUFO */ \"./src/PlaneAndUFO.ts\");\r\nvar Triangle_1 = __webpack_require__(/*! ./Triangle */ \"./src/Triangle.ts\");\r\nvar World_1 = __webpack_require__(/*! ./World */ \"./src/World.ts\");\r\nvar DefaultFunctions_1 = __webpack_require__(/*! ./DefaultFunctions */ \"./src/DefaultFunctions.ts\");\r\nvar Scoreboard_1 = __webpack_require__(/*! ./Scoreboard */ \"./src/Scoreboard.ts\");\r\nexports.canvas = document.createElement(\"canvas\");\r\nexports.canvas.width = 1288;\r\nexports.canvas.height = 800;\r\nexports.ctx = exports.canvas.getContext('2d');\r\nvar init = function () { return Main_1.root.appendChild(exports.canvas); };\r\nexports.init = init;\r\n//audio\r\nexports.volume = true;\r\nvar FPS = 40;\r\nvar fpsInterval;\r\nexports.time = 0;\r\nvar now;\r\nvar then;\r\nvar end = false;\r\nfunction startLoop(fps) {\r\n    fpsInterval = 1000 / fps;\r\n    then = Date.now();\r\n    refreshLoop();\r\n}\r\nfunction refreshLoop() {\r\n    requestAnimationFrame(refreshLoop);\r\n    now = Date.now();\r\n    var elapsed = now - then;\r\n    if (elapsed > fpsInterval) {\r\n        then = now - (elapsed % fpsInterval);\r\n        draw();\r\n        exports.time++;\r\n    }\r\n}\r\nstartLoop(FPS); // start game\r\nexports.pixelSize = 8;\r\nexports.cities = [];\r\nexports.rocketsCount = 30;\r\nexports.targetsX = [13 * exports.pixelSize, 32 * exports.pixelSize, 51 * exports.pixelSize, exports.canvas.width / 2 - 5 * exports.pixelSize, 98 * exports.pixelSize, 117 * exports.pixelSize, 136 * exports.pixelSize];\r\nexports.targetsY = exports.canvas.height - 3 * exports.pixelSize;\r\nexports.mouse = { x: window.innerWidth / 2, y: window.innerHeight / 2 };\r\nexports.startMissileX = (exports.canvas.width / 2 / exports.pixelSize) * exports.pixelSize;\r\nexports.startMissileY = exports.targetsY - 8 * exports.pixelSize + 1 / 2 * exports.pixelSize;\r\nexports.started = false;\r\nexports.rockets = [];\r\nexports.rocketSpeed = 24;\r\nexports.triggers = [];\r\nexports.missiles = [];\r\nexports.missileSpeed = 1;\r\nexports.planes = [];\r\nexports.UFOs = [];\r\nexports.triangles = [];\r\nexports.triangleSpeed = 1.5;\r\nvar volumeIcon = document.getElementById(\"volume\");\r\nvolumeIcon.onclick = function () {\r\n    if (exports.volume) {\r\n        exports.volume = !exports.volume;\r\n        volumeIcon.src = \"./data/mute.png\";\r\n    }\r\n    else {\r\n        exports.volume = !exports.volume;\r\n        volumeIcon.src = \"./data/volume.png\";\r\n    }\r\n};\r\nvar showStart = true;\r\nfunction crossHair(x, y) {\r\n    var rect = exports.canvas.getBoundingClientRect();\r\n    x = x - Math.floor(rect.x) - 10;\r\n    y = y - Math.floor(rect.y) - 10;\r\n    x = Math.floor(x / exports.pixelSize) * exports.pixelSize;\r\n    y = Math.floor(y / exports.pixelSize) * exports.pixelSize;\r\n    if (exports.airColor != \"white\")\r\n        exports.ctx.fillStyle = '#FFFFFF';\r\n    else\r\n        exports.ctx.fillStyle = '#000000';\r\n    exports.ctx.fillRect(x - exports.pixelSize, y, exports.pixelSize, exports.pixelSize);\r\n    exports.ctx.fillRect(x + exports.pixelSize, y, exports.pixelSize, exports.pixelSize);\r\n    exports.ctx.fillRect(x, y - exports.pixelSize, exports.pixelSize, exports.pixelSize);\r\n    exports.ctx.fillRect(x, y + exports.pixelSize, exports.pixelSize, exports.pixelSize);\r\n}\r\nvar startGame = false;\r\nvar triggerSpeed = 8;\r\nvar map = [{}]; // You could also use an array\r\ndocument.onkeydown = document.onkeyup = function (e) {\r\n    e = e || event; // to deal with IE\r\n    map[e.keyCode] = e.type == 'keydown';\r\n    if (e.keyCode == 17 && e.type == 'keydown') {\r\n        if (!end && startGame)\r\n            (0, Rocket_1.createRocket)();\r\n    }\r\n    if (e.keyCode == 13 && e.type == 'keydown') {\r\n        showStart = false;\r\n        if (!startGame) {\r\n            reset();\r\n            levels();\r\n        }\r\n        startGame = true;\r\n        end = false;\r\n    }\r\n};\r\nfunction moveTrigger() {\r\n    var rect = exports.canvas.getBoundingClientRect();\r\n    var width = exports.canvas.width + Math.floor(rect.x) + 10 - 2 * exports.pixelSize;\r\n    var height = exports.canvas.height + Math.floor(rect.y) + 10 - 12 * exports.pixelSize;\r\n    var minWidth = Math.floor(rect.x) + 24;\r\n    var minHeight = Math.floor(rect.y) + 24 + 112;\r\n    if (map[38] && map[37]) { // UP+LEFT\r\n        if (exports.mouse.x > minWidth)\r\n            exports.mouse = { x: exports.mouse.x - triggerSpeed, y: exports.mouse.y };\r\n        if (exports.mouse.y > minHeight)\r\n            exports.mouse = { x: exports.mouse.x, y: exports.mouse.y - triggerSpeed };\r\n    }\r\n    else if (map[38] && map[39]) { // UP+RIGHT\r\n        if (exports.mouse.x < width)\r\n            exports.mouse = { x: exports.mouse.x + triggerSpeed, y: exports.mouse.y };\r\n        if (exports.mouse.y > minHeight)\r\n            exports.mouse = { x: exports.mouse.x, y: exports.mouse.y - triggerSpeed };\r\n    }\r\n    else if (map[40] && map[37]) { // DOWN+LEFT\r\n        if (exports.mouse.x > minWidth)\r\n            exports.mouse = { x: exports.mouse.x - triggerSpeed, y: exports.mouse.y };\r\n        if (exports.mouse.y < height)\r\n            exports.mouse = { x: exports.mouse.x, y: exports.mouse.y + triggerSpeed };\r\n    }\r\n    else if (map[40] && map[39]) { // DOWN+RIGHT\r\n        if (exports.mouse.y < height)\r\n            exports.mouse = { x: exports.mouse.x, y: exports.mouse.y + triggerSpeed };\r\n        if (exports.mouse.x < width)\r\n            exports.mouse = { x: exports.mouse.x + triggerSpeed, y: exports.mouse.y };\r\n    }\r\n    else if (map[38]) { // UP\r\n        if (exports.mouse.y > minHeight)\r\n            exports.mouse = { x: exports.mouse.x, y: exports.mouse.y - triggerSpeed };\r\n    }\r\n    else if (map[40]) { // DOWN\r\n        if (exports.mouse.y < height)\r\n            exports.mouse = { x: exports.mouse.x, y: exports.mouse.y + triggerSpeed };\r\n    }\r\n    else if (map[37]) { // LEFT\r\n        if (exports.mouse.x > minWidth)\r\n            exports.mouse = { x: exports.mouse.x - triggerSpeed, y: exports.mouse.y };\r\n    }\r\n    else if (map[39]) { // RIGHT\r\n        if (exports.mouse.x < width)\r\n            exports.mouse = { x: exports.mouse.x + triggerSpeed, y: exports.mouse.y };\r\n    }\r\n}\r\nvar worldColors = [{\r\n        cityColor: \"blue\",\r\n        worldColor: \"#d4be00\",\r\n        airColor: \"black\",\r\n        enemyObjectsColor: \"orange\",\r\n        numbersColor: \"orange\"\r\n    },\r\n    {\r\n        cityColor: \"#7570ff\",\r\n        worldColor: \"#8a3200\",\r\n        airColor: \"black\",\r\n        enemyObjectsColor: \"green\",\r\n        numbersColor: \"yellow\"\r\n    },\r\n    {\r\n        cityColor: \"black\",\r\n        worldColor: \"#d4be00\",\r\n        airColor: \"blue\",\r\n        enemyObjectsColor: \"orange\",\r\n        numbersColor: \"pink\"\r\n    },\r\n    {\r\n        cityColor: \"blue\",\r\n        worldColor: \"#d4be00\",\r\n        airColor: \"white\",\r\n        enemyObjectsColor: \"#d4be00\",\r\n        numbersColor: \"orange\"\r\n    },\r\n];\r\nexports.cityColor = \"blue\";\r\nexports.worldColor = \"#d4be00\";\r\nexports.airColor = \"black\";\r\nexports.enemyObjectsColor = \"purple\";\r\nexports.numbersColor = \"orange\";\r\nvar colors = worldColors[Math.floor(Math.random() * worldColors.length)];\r\nexports.cityColor = colors.cityColor;\r\nexports.worldColor = colors.worldColor;\r\nexports.airColor = colors.airColor;\r\nexports.enemyObjectsColor = colors.enemyObjectsColor;\r\nexports.numbersColor = colors.numbersColor;\r\nexports.siloIsAlive = true;\r\nfunction destroySilo() {\r\n    (0, Boom_1.generateEnemyBoom)(exports.targetsX[3] + 4 * exports.pixelSize, Math.floor((exports.targetsY - 3 * exports.pixelSize) / exports.pixelSize) * exports.pixelSize + 1 / 2 * exports.pixelSize);\r\n    exports.siloIsAlive = false;\r\n    setTimeout(function () {\r\n        exports.siloIsAlive = true;\r\n    }, 2500);\r\n}\r\nexports.destroySilo = destroySilo;\r\nexports.levelFinished = false;\r\nvar lastRockets = [];\r\nvar drawMul = false;\r\nvar cityN = 0;\r\nvar rockety = 0;\r\nvar rocketsX = 104;\r\nfunction draw() {\r\n    var _a;\r\n    moveTrigger();\r\n    (0, World_1.createWorld)();\r\n    exports.started = true;\r\n    (0, World_1.drawRemoved)();\r\n    (0, Scoreboard_1.drawScore)();\r\n    (0, Scoreboard_1.drawHighScore)();\r\n    if (checkCities() == 0) {\r\n        end = true;\r\n        (0, Scoreboard_1.drawGameOver)(320, exports.canvas.height / 2 - 5 * exports.pixelSize);\r\n        startGame = false;\r\n    }\r\n    else {\r\n        if (drawMul)\r\n            (0, Scoreboard_1.drawMultipler)(504, exports.canvas.height / 2 - 5 * exports.pixelSize);\r\n        (0, Rocket_1.drawRocketOnSilos)();\r\n        (0, Rocket_1.drawRockets)();\r\n        (0, Trigger_1.drawTriggers)();\r\n        (0, Missile_1.drawMissiles)();\r\n        (0, PlaneAndUFO_1.drawPlane)();\r\n        (0, PlaneAndUFO_1.drawUFO)();\r\n        (0, Triangle_1.drawTriangle)();\r\n        (0, Boom_1.drawBooms)();\r\n        if (exports.levelFinished) {\r\n            if (rockety > 0 && exports.time % 5 == 0) {\r\n                lastRockets.push(rocketsX);\r\n                rocketsX += 4 * exports.pixelSize;\r\n                (0, Scoreboard_1.addPoints)(5);\r\n                rockety--;\r\n            }\r\n            if (exports.time % 20 == 0) {\r\n                if ((_a = exports.cities[cityN]) === null || _a === void 0 ? void 0 : _a.alive) {\r\n                    exports.cities[cityN].survived = true;\r\n                    (0, Scoreboard_1.addPoints)(100);\r\n                }\r\n                cityN++;\r\n            }\r\n            var citiesX_1 = 104;\r\n            exports.cities.forEach(function (element) {\r\n                if (element.survived) {\r\n                    element.drawSurvivedCity(citiesX_1, 400);\r\n                    citiesX_1 += 14 * exports.pixelSize;\r\n                }\r\n            });\r\n            lastRockets.forEach(function (element) {\r\n                (0, Rocket_1.drawRocketSil)(element, 304);\r\n            });\r\n        }\r\n    }\r\n    clearDeadObjects();\r\n    crossHair(exports.mouse.x, exports.mouse.y);\r\n    if (showStart) {\r\n        (0, Scoreboard_1.drawStart)();\r\n    }\r\n}\r\nfunction clearDeadObjects() {\r\n    exports.rockets = exports.rockets.filter(function (element) { return element.alive !== false; });\r\n    exports.triggers = exports.triggers.filter(function (element) { return element.alive !== false; });\r\n    exports.missiles = exports.missiles.filter(function (element) { return element.alive !== false; });\r\n    exports.planes = exports.planes.filter(function (element) { return element.alive !== false; });\r\n    exports.UFOs = exports.UFOs.filter(function (element) { return element.alive !== false; });\r\n    exports.triangles = exports.triangles.filter(function (element) { return element.alive !== false; });\r\n}\r\nvar actualLevel = 1;\r\nfunction finishLevel() {\r\n    var x = function () { return setTimeout(function () {\r\n        if (exports.missiles.length == 0 && exports.planes.length == 0 && exports.UFOs.length == 0 && exports.triangles.length == 0) {\r\n            rockety = exports.rocketsCount - Rocket_1.usedRockets;\r\n            rocketsX = 104;\r\n            cityN = 0;\r\n            exports.levelFinished = true;\r\n            setTimeout(function () {\r\n                drawMul = true;\r\n                exports.levelFinished = false;\r\n                (0, Rocket_1.resetRockets)();\r\n                end = false;\r\n                var song = new Audio();\r\n                song.src = '../data/soundBefore.mp3';\r\n                song.volume = exports.volume ? 0.5 : 0;\r\n                song.play();\r\n                setTimeout(function () {\r\n                    var colors = worldColors[Math.floor(Math.random() * worldColors.length)];\r\n                    exports.cityColor = colors.cityColor;\r\n                    exports.worldColor = colors.worldColor;\r\n                    exports.airColor = colors.airColor;\r\n                    exports.enemyObjectsColor = colors.enemyObjectsColor;\r\n                    exports.numbersColor = colors.numbersColor;\r\n                    lastRockets = [];\r\n                    drawMul = false;\r\n                    if (exports.missileSpeed < 4)\r\n                        exports.missileSpeed += 1 / 8;\r\n                    if (exports.triangleSpeed < 4)\r\n                        exports.triangleSpeed += 1 / 8;\r\n                    actualLevel++;\r\n                    (0, Scoreboard_1.setMultiplier)(Math.floor(Math.sqrt(actualLevel)));\r\n                    exports.time = 0;\r\n                    exports.cities.forEach(function (element) {\r\n                        if (element.survived) {\r\n                            element.survived = false;\r\n                        }\r\n                    });\r\n                    levels();\r\n                }, 2000);\r\n            }, 4500);\r\n        }\r\n        else\r\n            x();\r\n    }, 100); };\r\n    x();\r\n}\r\nfunction reset() {\r\n    exports.rockets = [];\r\n    exports.triggers = [];\r\n    exports.missiles = [];\r\n    exports.planes = [];\r\n    exports.UFOs = [];\r\n    exports.triangles = [];\r\n    exports.cities = [];\r\n    (0, Boom_1.clearBooms)();\r\n    exports.started = false;\r\n    exports.missileSpeed = 1;\r\n    exports.triangleSpeed = 1.5;\r\n    actualLevel = 1;\r\n    exports.levelFinished = false;\r\n    (0, Scoreboard_1.setMultiplier)(Math.floor(Math.sqrt(actualLevel)));\r\n    (0, Scoreboard_1.setHighScore)(Scoreboard_1.score);\r\n    (0, Scoreboard_1.resetScore)();\r\n    exports.time = 0;\r\n    clearTimeout(y);\r\n}\r\nvar y;\r\nfunction levels() {\r\n    y = setTimeout(function () {\r\n        for (var i = 0; i < (0, DefaultFunctions_1.getRandomInt)(0, 3); i++)\r\n            (0, Missile_1.createMissile)();\r\n        for (var i = 0; i < (0, DefaultFunctions_1.getRandomInt)(0, 3); i++)\r\n            (0, Triangle_1.createTriangle)();\r\n        // if (getRandomInt(0, 2) < 1) {\r\n        //     createPlane()\r\n        // } else {\r\n        //     createUFO()\r\n        // }\r\n        (0, PlaneAndUFO_1.createUFO)();\r\n        var x = function () { return setTimeout(function () {\r\n            for (var i = 0; i < (0, DefaultFunctions_1.getRandomInt)(0, 4); i++)\r\n                (0, Missile_1.createMissile)();\r\n            for (var i = 0; i < (0, DefaultFunctions_1.getRandomInt)(0, 4); i++)\r\n                (0, Triangle_1.createTriangle)();\r\n            if ((0, DefaultFunctions_1.getRandomInt)(0, 3) < 1) {\r\n                if ((0, DefaultFunctions_1.getRandomInt)(0, 2) < 1) {\r\n                    (0, PlaneAndUFO_1.createPlane)();\r\n                }\r\n                else {\r\n                    (0, PlaneAndUFO_1.createUFO)();\r\n                }\r\n            }\r\n            if (!end) {\r\n                if (exports.time < 750) {\r\n                    x();\r\n                }\r\n                else {\r\n                    finishLevel();\r\n                }\r\n            }\r\n        }, (0, DefaultFunctions_1.getRandomInt)(10000, 12000)); };\r\n        x();\r\n    }, 200);\r\n}\r\nfunction checkCities() {\r\n    var alives = 0;\r\n    exports.cities.forEach(function (element) {\r\n        if (element.alive)\r\n            alives++;\r\n    });\r\n    return alives;\r\n}\r\nwindow.requestAnimationFrame(refreshLoop);\r\n\n\n//# sourceURL=webpack://missile-command/./src/FrameRender.ts?");

/***/ }),

/***/ "./src/Main.ts":
/*!*********************!*\
  !*** ./src/Main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.root = void 0;\r\nvar FrameRender_1 = __webpack_require__(/*! ./FrameRender */ \"./src/FrameRender.ts\");\r\nexports.root = document.getElementById(\"root\");\r\n(0, FrameRender_1.init)();\r\n\n\n//# sourceURL=webpack://missile-command/./src/Main.ts?");

/***/ }),

/***/ "./src/Missile.ts":
/*!************************!*\
  !*** ./src/Missile.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.createPlaneMissile = exports.drawMissilePath = exports.drawMissiles = exports.createMissile = void 0;\r\nvar DefaultFunctions_1 = __webpack_require__(/*! ./DefaultFunctions */ \"./src/DefaultFunctions.ts\");\r\nvar FrameRender_1 = __webpack_require__(/*! ./FrameRender */ \"./src/FrameRender.ts\");\r\nvar World_1 = __webpack_require__(/*! ./World */ \"./src/World.ts\");\r\nfunction createMissile() {\r\n    if (FrameRender_1.missiles.length < 5) {\r\n        var missileStartX = Math.floor((0, DefaultFunctions_1.getRandomInt)(3 * FrameRender_1.pixelSize, FrameRender_1.canvas.width - 3 * FrameRender_1.pixelSize) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n        var missileStartY = 112;\r\n        var missileTargetX = FrameRender_1.targetsX[Math.floor(Math.random() * FrameRender_1.targetsX.length)] + 5 * FrameRender_1.pixelSize;\r\n        var missileTargetY = Math.floor((FrameRender_1.targetsY - 3 * FrameRender_1.pixelSize) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize + 1 / 2 * FrameRender_1.pixelSize;\r\n        var angle = (0, DefaultFunctions_1.angleFromStartToTarget)(missileStartX, missileStartY, missileTargetX, missileTargetY);\r\n        FrameRender_1.missiles.push({\r\n            targetX: missileTargetX,\r\n            targetY: missileTargetY,\r\n            currentX: missileStartX,\r\n            currentY: missileStartY,\r\n            startX: missileStartX,\r\n            startY: missileStartY,\r\n            angle: angle,\r\n            alive: true,\r\n            missilePath: [],\r\n            multi: true\r\n        });\r\n    }\r\n}\r\nexports.createMissile = createMissile;\r\nfunction drawMissiles() {\r\n    FrameRender_1.missiles.forEach(function (element) {\r\n        element.currentX += FrameRender_1.missileSpeed * Math.sin(element.angle);\r\n        element.currentY += FrameRender_1.missileSpeed * -Math.cos(element.angle);\r\n        var x = Math.floor(element.currentX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n        var y = Math.floor(element.currentY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n        var pathStr = x.toString() + \" \" + y.toString();\r\n        if (!element.missilePath.includes(pathStr)) {\r\n            element.missilePath.push(pathStr);\r\n        }\r\n        (0, DefaultFunctions_1.filterPath)(element.missilePath);\r\n        if (Math.abs((Math.floor(element.currentX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize) - (Math.floor(element.targetX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize)) == 0 &&\r\n            Math.abs((Math.floor(element.currentY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize) - (Math.floor(element.targetY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize)) == 0) {\r\n            element.alive = false;\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[0])\r\n                (0, World_1.removeCity)(0);\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[1])\r\n                (0, World_1.removeCity)(1);\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[2])\r\n                (0, World_1.removeCity)(2);\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[3])\r\n                (0, FrameRender_1.destroySilo)();\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[4])\r\n                (0, World_1.removeCity)(3);\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[5])\r\n                (0, World_1.removeCity)(4);\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[6])\r\n                (0, World_1.removeCity)(5);\r\n            FrameRender_1.triggers.forEach(function (element1) {\r\n                if (element1.x == Math.floor(element.currentX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize &&\r\n                    element1.y == Math.floor(element.currentY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize) {\r\n                    element1.alive = false;\r\n                }\r\n            });\r\n        }\r\n        drawMissilePath(element);\r\n    });\r\n}\r\nexports.drawMissiles = drawMissiles;\r\nfunction drawMissilePath(missile) {\r\n    missile.missilePath.forEach(function (element) {\r\n        var el = element.split(\" \");\r\n        FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n        FrameRender_1.ctx.fillRect(parseInt(el[0]), parseInt(el[1]), FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    });\r\n    FrameRender_1.ctx.fillStyle = \"purple\";\r\n    FrameRender_1.ctx.fillRect((Math.floor(missile.currentX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize), (Math.floor(missile.currentY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize), FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    if (missile.multi && missile.currentY < 500)\r\n        if ((0, DefaultFunctions_1.getRandomInt)(0, 1000) < 1)\r\n            createRandomMissile(missile.currentX, missile.currentY);\r\n}\r\nexports.drawMissilePath = drawMissilePath;\r\nfunction createRandomMissile(startX, startY) {\r\n    for (var i = 0; i < (0, DefaultFunctions_1.getRandomInt)(1, 4); i++) {\r\n        var targetX = FrameRender_1.targetsX[Math.floor(Math.random() * FrameRender_1.targetsX.length)] + 5 * FrameRender_1.pixelSize;\r\n        var targetY = Math.floor((FrameRender_1.targetsY - 3 * FrameRender_1.pixelSize) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize + 1 / 2 * FrameRender_1.pixelSize;\r\n        var angle = (0, DefaultFunctions_1.angleFromStartToTarget)(startX, startY, targetX, targetY);\r\n        FrameRender_1.missiles.push({\r\n            targetX: targetX,\r\n            targetY: targetY,\r\n            currentX: startX,\r\n            currentY: startY,\r\n            startX: startX,\r\n            startY: startY,\r\n            angle: angle,\r\n            alive: true,\r\n            missilePath: [],\r\n            multi: false\r\n        });\r\n    }\r\n}\r\nfunction createPlaneMissile(startX, startY) {\r\n    for (var i = 0; i < (0, DefaultFunctions_1.getRandomInt)(1, 2); i++) {\r\n        var targetX = FrameRender_1.targetsX[Math.floor(Math.random() * FrameRender_1.targetsX.length)] + 5 * FrameRender_1.pixelSize;\r\n        var targetY = Math.floor((FrameRender_1.targetsY - 3 * FrameRender_1.pixelSize) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize + 1 / 2 * FrameRender_1.pixelSize;\r\n        var angle = (0, DefaultFunctions_1.angleFromStartToTarget)(startX, startY, targetX, targetY);\r\n        FrameRender_1.missiles.push({\r\n            targetX: targetX,\r\n            targetY: targetY,\r\n            currentX: startX,\r\n            currentY: startY,\r\n            startX: startX,\r\n            startY: startY,\r\n            angle: angle,\r\n            alive: true,\r\n            missilePath: [],\r\n            multi: false\r\n        });\r\n    }\r\n}\r\nexports.createPlaneMissile = createPlaneMissile;\r\n\n\n//# sourceURL=webpack://missile-command/./src/Missile.ts?");

/***/ }),

/***/ "./src/PlaneAndUFO.ts":
/*!****************************!*\
  !*** ./src/PlaneAndUFO.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.drawUFO = exports.createUFO = exports.createPlane = exports.drawPlane = void 0;\r\nvar FrameRender_1 = __webpack_require__(/*! ./FrameRender */ \"./src/FrameRender.ts\");\r\nvar Missile_1 = __webpack_require__(/*! ./Missile */ \"./src/Missile.ts\");\r\nvar DefaultFunctions_1 = __webpack_require__(/*! ./DefaultFunctions */ \"./src/DefaultFunctions.ts\");\r\nfunction drawLeftPlane(xVal, yVal) {\r\n    var song = new Audio();\r\n    song.src = '../data/planeSound.mp3';\r\n    song.volume = FrameRender_1.volume ? 0.5 : 0;\r\n    if (FrameRender_1.time % 9 == 0)\r\n        song.play();\r\n    var x = Math.round(xVal / FrameRender_1.pixelSize) * FrameRender_1.pixelSize - 5 * FrameRender_1.pixelSize;\r\n    var y = Math.round(yVal / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.enemyObjectsColor;\r\n    FrameRender_1.ctx.fillRect(x, y, 8 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y - FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, 3 * FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y - 2 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 5 * FrameRender_1.pixelSize, y - 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 6 * FrameRender_1.pixelSize, y + 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 7 * FrameRender_1.pixelSize, y - FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction drawRightPlane(xVal, yVal) {\r\n    var song = new Audio();\r\n    song.src = '../data/planeSound.mp3';\r\n    song.volume = FrameRender_1.volume ? 0.5 : 0;\r\n    if (FrameRender_1.time % 9 == 0)\r\n        song.play();\r\n    var x = Math.round(xVal / FrameRender_1.pixelSize) * FrameRender_1.pixelSize - 5 * FrameRender_1.pixelSize;\r\n    var y = Math.round(yVal / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.enemyObjectsColor;\r\n    FrameRender_1.ctx.fillRect(x, y, 8 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y - FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y - FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, 3 * FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y - 2 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y - 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y + 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction drawPlane() {\r\n    FrameRender_1.planes.forEach(function (element) {\r\n        if (element.leftDir) {\r\n            drawLeftPlane(element.currentX, element.y);\r\n            element.currentX += -1;\r\n            if (element.currentX < 0)\r\n                element.alive = false;\r\n        }\r\n        else {\r\n            drawRightPlane(element.currentX, element.y);\r\n            element.currentX += +1;\r\n            if (element.currentX > FrameRender_1.canvas.width)\r\n                element.alive = false;\r\n        }\r\n        if (element.xMissiles.includes(element.currentX))\r\n            (0, Missile_1.createPlaneMissile)(element.currentX, element.y);\r\n    });\r\n}\r\nexports.drawPlane = drawPlane;\r\nfunction createPlane() {\r\n    if (FrameRender_1.planes.length < 1) {\r\n        var arr = [];\r\n        for (var i = 0; i < (0, DefaultFunctions_1.getRandomInt)(1, 4); i++)\r\n            arr.push(Math.floor((0, DefaultFunctions_1.getRandomInt)(4 * FrameRender_1.pixelSize, FrameRender_1.canvas.width - 4 * FrameRender_1.pixelSize + 1) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize);\r\n        if ((0, DefaultFunctions_1.getRandomInt)(0, 2) < 1)\r\n            FrameRender_1.planes.push({\r\n                leftDir: true,\r\n                currentX: FrameRender_1.canvas.width,\r\n                y: Math.round((0, DefaultFunctions_1.getRandomInt)(128, 400) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize,\r\n                alive: true,\r\n                xMissiles: arr\r\n            });\r\n        else\r\n            FrameRender_1.planes.push({\r\n                leftDir: false,\r\n                currentX: 0,\r\n                y: Math.round((0, DefaultFunctions_1.getRandomInt)(128, 400) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize,\r\n                alive: true,\r\n                xMissiles: arr\r\n            });\r\n    }\r\n}\r\nexports.createPlane = createPlane;\r\nfunction createUFO() {\r\n    if (FrameRender_1.UFOs.length < 1) {\r\n        var arr = [];\r\n        for (var i = 0; i < (0, DefaultFunctions_1.getRandomInt)(1, 4); i++)\r\n            arr.push(Math.floor((0, DefaultFunctions_1.getRandomInt)(4 * FrameRender_1.pixelSize, FrameRender_1.canvas.width - 4 * FrameRender_1.pixelSize + 1) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize);\r\n        if ((0, DefaultFunctions_1.getRandomInt)(0, 1) < 1)\r\n            FrameRender_1.UFOs.push({\r\n                leftDir: true,\r\n                currentX: FrameRender_1.canvas.width,\r\n                currentY: Math.round((0, DefaultFunctions_1.getRandomInt)(128, 200) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize,\r\n                alive: true,\r\n                xMissiles: arr\r\n            });\r\n        else\r\n            FrameRender_1.UFOs.push({\r\n                leftDir: false,\r\n                currentX: 0,\r\n                currentY: Math.round((0, DefaultFunctions_1.getRandomInt)(128, 200) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize,\r\n                alive: true,\r\n                xMissiles: arr\r\n            });\r\n    }\r\n}\r\nexports.createUFO = createUFO;\r\nfunction drawUFO() {\r\n    FrameRender_1.UFOs.forEach(function (element) {\r\n        var song = new Audio();\r\n        song.src = '../data/planeSound.mp3';\r\n        song.volume = FrameRender_1.volume ? 0.5 : 0;\r\n        if (FrameRender_1.time % 9 == 0)\r\n            song.play();\r\n        var x = Math.round(element.currentX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n        var y = Math.round(element.currentY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n        FrameRender_1.ctx.fillStyle = FrameRender_1.enemyObjectsColor;\r\n        FrameRender_1.ctx.fillRect(x - 4 * FrameRender_1.pixelSize, y - 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y - 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x - 3 * FrameRender_1.pixelSize, y - 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x - 1 * FrameRender_1.pixelSize, y - 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y - 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x - 2 * FrameRender_1.pixelSize, y - 2 * FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x - 3 * FrameRender_1.pixelSize, y - 1 * FrameRender_1.pixelSize, 6 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x - 3 * FrameRender_1.pixelSize, y, 6 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x - 2 * FrameRender_1.pixelSize, y + FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x - 1 * FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x - 3 * FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x - 4 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        if (element.leftDir) {\r\n            element.currentX += -1;\r\n            if (element.currentX < 0)\r\n                element.alive = false;\r\n        }\r\n        else {\r\n            element.currentX += 1;\r\n            if (element.currentX > FrameRender_1.canvas.width)\r\n                element.alive = false;\r\n        }\r\n        if ((0, DefaultFunctions_1.getRandomInt)(0, 300) < 2)\r\n            (0, Missile_1.createPlaneMissile)(element.currentX, element.currentY);\r\n    });\r\n}\r\nexports.drawUFO = drawUFO;\r\n\n\n//# sourceURL=webpack://missile-command/./src/PlaneAndUFO.ts?");

/***/ }),

/***/ "./src/Rocket.ts":
/*!***********************!*\
  !*** ./src/Rocket.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.drawRockets = exports.drawRocketSil = exports.drawRocketOnSilos = exports.createRocket = exports.resetRockets = exports.usedRockets = void 0;\r\nvar FrameRender_1 = __webpack_require__(/*! ./FrameRender */ \"./src/FrameRender.ts\");\r\nvar Boom_1 = __webpack_require__(/*! ./Boom */ \"./src/Boom.ts\");\r\nvar DefaultFunctions_1 = __webpack_require__(/*! ./DefaultFunctions */ \"./src/DefaultFunctions.ts\");\r\nexports.usedRockets = 0;\r\nfunction resetRockets() {\r\n    exports.usedRockets = 0;\r\n}\r\nexports.resetRockets = resetRockets;\r\nfunction createRocket() {\r\n    drawRocketOnSilos();\r\n    if (FrameRender_1.siloIsAlive) {\r\n        if (exports.usedRockets < FrameRender_1.rocketsCount) {\r\n            exports.usedRockets++;\r\n            var rect = FrameRender_1.canvas.getBoundingClientRect();\r\n            var x = FrameRender_1.mouse.x - Math.floor(rect.x) - 10;\r\n            var y = FrameRender_1.mouse.y - Math.floor(rect.y) - 10;\r\n            x = Math.floor(x / FrameRender_1.pixelSize) * FrameRender_1.pixelSize + 1 / 2 * FrameRender_1.pixelSize;\r\n            y = Math.floor(y / FrameRender_1.pixelSize) * FrameRender_1.pixelSize + 1 / 2 * FrameRender_1.pixelSize;\r\n            FrameRender_1.rockets.push({\r\n                targetX: x,\r\n                targetY: y,\r\n                currentX: FrameRender_1.startMissileX,\r\n                currentY: FrameRender_1.startMissileY,\r\n                angle: (0, DefaultFunctions_1.angleFromStartToTarget)(FrameRender_1.startMissileX, FrameRender_1.startMissileY, x, y),\r\n                alive: true,\r\n                missilePath: [\r\n                    (Math.floor(FrameRender_1.startMissileX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize).toString() + \" \" +\r\n                        (Math.floor(FrameRender_1.startMissileY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize).toString()\r\n                ]\r\n            });\r\n            FrameRender_1.triggers.push({\r\n                x: Math.floor(x / FrameRender_1.pixelSize) * FrameRender_1.pixelSize,\r\n                y: Math.floor(y / FrameRender_1.pixelSize) * FrameRender_1.pixelSize,\r\n                alive: true\r\n            });\r\n        }\r\n    }\r\n}\r\nexports.createRocket = createRocket;\r\nfunction drawRocketOnSilos() {\r\n    if (exports.usedRockets != FrameRender_1.rocketsCount && FrameRender_1.siloIsAlive) {\r\n        if (exports.usedRockets % 6 == 0) {\r\n            drawRocketSil(FrameRender_1.canvas.width / 2, FrameRender_1.canvas.height - 9 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 - 3 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 6 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 + 3 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 6 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 - 6 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 4 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2, FrameRender_1.canvas.height - 4 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 + 6 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 4 * FrameRender_1.pixelSize);\r\n        }\r\n        if (exports.usedRockets % 6 == 1) {\r\n            drawRocketSil(FrameRender_1.canvas.width / 2, FrameRender_1.canvas.height - 9 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 - 3 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 6 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 + 3 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 6 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 - 6 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 4 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2, FrameRender_1.canvas.height - 4 * FrameRender_1.pixelSize);\r\n        }\r\n        if (exports.usedRockets % 6 == 2) {\r\n            drawRocketSil(FrameRender_1.canvas.width / 2, FrameRender_1.canvas.height - 9 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 - 3 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 6 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 + 3 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 6 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 - 6 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 4 * FrameRender_1.pixelSize);\r\n        }\r\n        if (exports.usedRockets % 6 == 3) {\r\n            drawRocketSil(FrameRender_1.canvas.width / 2, FrameRender_1.canvas.height - 9 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 - 3 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 6 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 + 3 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 6 * FrameRender_1.pixelSize);\r\n        }\r\n        if (exports.usedRockets % 6 == 4) {\r\n            drawRocketSil(FrameRender_1.canvas.width / 2, FrameRender_1.canvas.height - 9 * FrameRender_1.pixelSize);\r\n            drawRocketSil(FrameRender_1.canvas.width / 2 - 3 * FrameRender_1.pixelSize, FrameRender_1.canvas.height - 6 * FrameRender_1.pixelSize);\r\n        }\r\n        if (exports.usedRockets % 6 == 5) {\r\n            drawRocketSil(FrameRender_1.canvas.width / 2, FrameRender_1.canvas.height - 9 * FrameRender_1.pixelSize);\r\n        }\r\n    }\r\n}\r\nexports.drawRocketOnSilos = drawRocketOnSilos;\r\nfunction drawRocketSil(xV, yV) {\r\n    var x = Math.floor(xV / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n    var y = Math.floor(yV / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.cityColor;\r\n    FrameRender_1.ctx.fillRect(x, y, FrameRender_1.pixelSize, 3 * FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x - 1 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 1 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nexports.drawRocketSil = drawRocketSil;\r\nfunction drawRockets() {\r\n    FrameRender_1.rockets.forEach(function (element) {\r\n        var song = new Audio();\r\n        song.src = '../data/soundRocket.mp3';\r\n        song.volume = FrameRender_1.volume ? 0.5 : 0;\r\n        if (FrameRender_1.time % 9 == 0)\r\n            song.play();\r\n        for (var index = 0; index < Math.ceil(FrameRender_1.rocketSpeed / FrameRender_1.pixelSize); index++) {\r\n            element.currentX += FrameRender_1.rocketSpeed / Math.ceil(FrameRender_1.rocketSpeed / FrameRender_1.pixelSize) * Math.sin(element.angle);\r\n            element.currentY += FrameRender_1.rocketSpeed / Math.ceil(FrameRender_1.rocketSpeed / FrameRender_1.pixelSize) * -Math.cos(element.angle);\r\n            var x = Math.floor(element.currentX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n            var y = Math.floor(element.currentY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n            var pathStr = x.toString() + \" \" + y.toString();\r\n            if (!element.missilePath.includes(pathStr)) {\r\n                element.missilePath.push(pathStr);\r\n            }\r\n        }\r\n        (0, DefaultFunctions_1.filterPath)(element.missilePath);\r\n        if (Math.abs(Math.floor(element.currentX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize - Math.floor(element.targetX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize) < 2 * FrameRender_1.pixelSize &&\r\n            Math.abs(Math.floor(element.currentY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize - Math.floor(element.targetY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize) < 2 * FrameRender_1.pixelSize) {\r\n            element.alive = false;\r\n            (0, Boom_1.generateUserBoom)(element.targetX, element.targetY);\r\n            FrameRender_1.triggers.forEach(function (element1) {\r\n                if (Math.abs(element1.x - Math.floor(element.currentX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize) < 2 * FrameRender_1.pixelSize &&\r\n                    Math.abs(element1.y - Math.floor(element.currentY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize) < 2 * FrameRender_1.pixelSize) {\r\n                    element1.alive = false;\r\n                }\r\n            });\r\n        }\r\n        drawRocketsPath(element);\r\n    });\r\n}\r\nexports.drawRockets = drawRockets;\r\nfunction drawRocketsPath(rocket) {\r\n    FrameRender_1.ctx.fillRect((Math.floor(FrameRender_1.canvas.width / 2 / FrameRender_1.pixelSize) * FrameRender_1.pixelSize), (FrameRender_1.canvas.height - 10 * FrameRender_1.pixelSize), FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect((Math.floor(FrameRender_1.canvas.width / 2 / FrameRender_1.pixelSize) * FrameRender_1.pixelSize), (FrameRender_1.canvas.height - 9 * FrameRender_1.pixelSize), FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    rocket.missilePath.forEach(function (element) {\r\n        var el = element.split(\" \");\r\n        FrameRender_1.ctx.fillStyle = FrameRender_1.cityColor;\r\n        FrameRender_1.ctx.fillRect(parseInt(el[0]), parseInt(el[1]), FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://missile-command/./src/Rocket.ts?");

/***/ }),

/***/ "./src/Scoreboard.ts":
/*!***************************!*\
  !*** ./src/Scoreboard.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.drawStart = exports.drawGameOver = exports.drawMultipler = exports.drawHighScore = exports.drawScore = exports.setHighScore = exports.setMultiplier = exports.resetScore = exports.addPoints = exports.multiplier = exports.highScore = exports.score = void 0;\r\nvar FrameRender_1 = __webpack_require__(/*! ./FrameRender */ \"./src/FrameRender.ts\");\r\nexports.score = 0;\r\nexports.highScore = 0;\r\nexports.multiplier = 1;\r\nfunction addPoints(points) {\r\n    exports.score += points * exports.multiplier;\r\n}\r\nexports.addPoints = addPoints;\r\nfunction resetScore() {\r\n    exports.score = 0;\r\n}\r\nexports.resetScore = resetScore;\r\nfunction setMultiplier(c) {\r\n    exports.multiplier = c;\r\n}\r\nexports.setMultiplier = setMultiplier;\r\nfunction setHighScore(val) {\r\n    if (exports.highScore < val)\r\n        exports.highScore = val;\r\n}\r\nexports.setHighScore = setHighScore;\r\nfunction draw0(x, y) {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y + 5 * FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction draw1(x, y) {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n    FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y, 2 * FrameRender_1.pixelSize, 6 * FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 5 * FrameRender_1.pixelSize, 6 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y + FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction draw2(x, y) {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n    FrameRender_1.ctx.fillRect(x, y + 5 * FrameRender_1.pixelSize, 6 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y + 4 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + 1 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 1 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction draw3(x, y) {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n    FrameRender_1.ctx.fillRect(x, y, 6 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y + 1 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + 4 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 4 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y + 5 * FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction draw4(x, y) {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n    FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y, 2 * FrameRender_1.pixelSize, 6 * FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y + FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 1 * FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 4 * FrameRender_1.pixelSize, 6 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction draw5(x, y) {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n    FrameRender_1.ctx.fillRect(x, y, 6 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 2 * FrameRender_1.pixelSize, 5 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 4 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + 4 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y + 5 * FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction draw6(x, y) {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 2 * FrameRender_1.pixelSize, 5 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 4 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y + 5 * FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + 4 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction draw7(x, y) {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n    FrameRender_1.ctx.fillRect(x, y, 6 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 2 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 1 * FrameRender_1.pixelSize, y + 4 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 1 * FrameRender_1.pixelSize, y + 5 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction draw8(x, y) {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + 4 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + 4 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y + 5 * FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction draw9(x, y) {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x, y + FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + FrameRender_1.pixelSize, y + 2 * FrameRender_1.pixelSize, 5 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 4 * FrameRender_1.pixelSize, y + 3 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 3 * FrameRender_1.pixelSize, y + 4 * FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(x + 1 * FrameRender_1.pixelSize, y + 5 * FrameRender_1.pixelSize, 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction drawScore() {\r\n    var sc = exports.score.toString();\r\n    if (sc.length == 1) {\r\n        draw0(16 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        draw0(24 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        draw0(32 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        draw0(40 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        draw0(48 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n    }\r\n    else if (sc.length == 2) {\r\n        draw0(16 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        draw0(24 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        draw0(32 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[0]), 40 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[1]), 48 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n    }\r\n    else if (sc.length == 3) {\r\n        draw0(16 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        draw0(24 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[0]), 32 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[1]), 40 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[2]), 48 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n    }\r\n    else if (sc.length == 4) {\r\n        draw0(16 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[0]), 24 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[1]), 32 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[2]), 40 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[3]), 48 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n    }\r\n    else if (sc.length == 5) {\r\n        drawNum(parseInt(sc[0]), 16 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[1]), 24 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[2]), 32 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[3]), 40 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[4]), 48 * FrameRender_1.pixelSize, 8 * FrameRender_1.pixelSize);\r\n    }\r\n}\r\nexports.drawScore = drawScore;\r\nfunction drawHighScore() {\r\n    var sc = exports.highScore.toString();\r\n    if (sc.length == 1) {\r\n        draw0(80 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        draw0(88 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        draw0(96 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        draw0(104 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        draw0(112 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n    }\r\n    else if (sc.length == 2) {\r\n        draw0(80 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        draw0(88 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        draw0(96 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[0]), 104 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[1]), 112 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n    }\r\n    else if (sc.length == 3) {\r\n        draw0(80 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        draw0(88 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[0]), 96 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[1]), 104 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[2]), 112 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n    }\r\n    else if (sc.length == 4) {\r\n        draw0(80 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[0]), 88 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[1]), 96 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[2]), 104 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[3]), 112 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n    }\r\n    else if (sc.length == 5) {\r\n        drawNum(parseInt(sc[0]), 80 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[1]), 88 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[2]), 96 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[3]), 104 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n        drawNum(parseInt(sc[4]), 112 * FrameRender_1.pixelSize, 1 * FrameRender_1.pixelSize);\r\n    }\r\n}\r\nexports.drawHighScore = drawHighScore;\r\nfunction drawNum(num, x, y) {\r\n    if (num == 0)\r\n        draw0(x, y);\r\n    if (num == 1)\r\n        draw1(x, y);\r\n    if (num == 2)\r\n        draw2(x, y);\r\n    if (num == 3)\r\n        draw3(x, y);\r\n    if (num == 4)\r\n        draw4(x, y);\r\n    if (num == 5)\r\n        draw5(x, y);\r\n    if (num == 6)\r\n        draw6(x, y);\r\n    if (num == 7)\r\n        draw7(x, y);\r\n    if (num == 8)\r\n        draw8(x, y);\r\n    if (num == 9)\r\n        draw9(x, y);\r\n}\r\nfunction drawMultipler(x, y) {\r\n    var text = [\r\n        [1, 1, 1, 1, 1, 1, 0, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 1, 1, 1, 1, 0, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n    ];\r\n    drawPixels(x, y, text);\r\n    text = [\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n    ];\r\n    drawPixels(x + 10 * FrameRender_1.pixelSize, y, text);\r\n    text = [\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n    ];\r\n    drawPixels(x + 20 * FrameRender_1.pixelSize, y, text);\r\n    text = [\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 1, 0, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 0, 0, 1, 1],\r\n        [1, 1, 0, 1, 1, 0, 1, 1],\r\n        [1, 1, 0, 1, 1, 0, 1, 1],\r\n        [1, 1, 0, 0, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n    ];\r\n    drawPixels(x + 30 * FrameRender_1.pixelSize, y, text);\r\n    text = [\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n    ];\r\n    drawPixels(x + 40 * FrameRender_1.pixelSize, y, text);\r\n    text = [\r\n        [0, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [0, 1, 1, 1, 1, 1, 0, 0],\r\n        [0, 0, 1, 1, 1, 1, 1, 0],\r\n        [0, 0, 0, 0, 0, 0, 1, 1],\r\n        [0, 0, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 0],\r\n    ];\r\n    drawPixels(x + 50 * FrameRender_1.pixelSize, y, text);\r\n    text = [\r\n        [0, 0, 0, 0, 0, 0, 0, 0],\r\n        [0, 1, 0, 0, 0, 0, 1, 0],\r\n        [0, 1, 1, 0, 0, 1, 1, 0],\r\n        [0, 0, 1, 1, 1, 1, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 1, 1, 1, 1, 0, 0],\r\n        [0, 1, 1, 0, 0, 1, 1, 0],\r\n        [0, 1, 0, 0, 0, 0, 1, 0],\r\n        [0, 0, 0, 0, 0, 0, 0, 0],\r\n    ];\r\n    drawPixels(x - 10 * FrameRender_1.pixelSize, y, text);\r\n    var n1 = [\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 1, 1, 1, 0, 0, 0],\r\n        [0, 1, 1, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n    ];\r\n    var n2 = [\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [0, 0, 0, 0, 0, 0, 1, 1],\r\n        [0, 0, 0, 0, 0, 1, 1, 0],\r\n        [0, 0, 0, 1, 1, 1, 0, 0],\r\n        [0, 0, 1, 1, 1, 0, 0, 0],\r\n        [0, 1, 1, 0, 0, 0, 0, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n    ];\r\n    var n3 = [\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [0, 0, 0, 0, 0, 0, 1, 1],\r\n        [0, 0, 0, 1, 1, 1, 1, 0],\r\n        [0, 0, 0, 1, 1, 1, 1, 0],\r\n        [0, 0, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n    ];\r\n    var n4 = [\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 0, 0, 0, 1, 1, 0],\r\n        [1, 1, 0, 0, 0, 1, 1, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [0, 0, 0, 0, 0, 1, 1, 0],\r\n        [0, 0, 0, 0, 0, 1, 1, 0],\r\n        [0, 0, 0, 0, 0, 1, 1, 0],\r\n        [0, 0, 0, 0, 0, 1, 1, 0],\r\n    ];\r\n    var n5 = [\r\n        [1, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [0, 0, 0, 0, 0, 0, 1, 1],\r\n        [0, 0, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 0],\r\n    ];\r\n    var n6 = [\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [0, 1, 1, 1, 1, 1, 1, 0],\r\n    ];\r\n    if (exports.multiplier == 1)\r\n        drawPixels(x - 20 * FrameRender_1.pixelSize, y, n1);\r\n    if (exports.multiplier == 2)\r\n        drawPixels(x - 20 * FrameRender_1.pixelSize, y, n2);\r\n    if (exports.multiplier == 3)\r\n        drawPixels(x - 20 * FrameRender_1.pixelSize, y, n3);\r\n    if (exports.multiplier == 4)\r\n        drawPixels(x - 20 * FrameRender_1.pixelSize, y, n4);\r\n    if (exports.multiplier == 5)\r\n        drawPixels(x - 20 * FrameRender_1.pixelSize, y, n5);\r\n    if (exports.multiplier == 6)\r\n        drawPixels(x - 20 * FrameRender_1.pixelSize, y, n6);\r\n}\r\nexports.drawMultipler = drawMultipler;\r\nfunction drawGameOver(x, y) {\r\n    var text = [\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n        [0, 0, 0, 1, 1, 0, 0, 0],\r\n    ];\r\n    drawPixels(x, y, text);\r\n    text = [\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n    ];\r\n    drawPixels(x + 10 * FrameRender_1.pixelSize, y, text);\r\n    text = [\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n    ];\r\n    drawPixels(x + 20 * FrameRender_1.pixelSize, y, text);\r\n    text = [\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 0, 0, 0, 0, 0, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 1],\r\n    ];\r\n    drawPixels(x + 50 * FrameRender_1.pixelSize, y, text);\r\n    text = [\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 1, 0, 0, 0, 1, 1],\r\n        [1, 1, 1, 1, 0, 0, 1, 1],\r\n        [1, 1, 0, 1, 1, 0, 1, 1],\r\n        [1, 1, 0, 1, 1, 0, 1, 1],\r\n        [1, 1, 0, 0, 1, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n    ];\r\n    drawPixels(x + 60 * FrameRender_1.pixelSize, y, text);\r\n    text = [\r\n        [1, 1, 1, 1, 1, 1, 0, 0],\r\n        [1, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 0, 0, 0, 1, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 0, 1, 1],\r\n        [1, 1, 0, 0, 0, 1, 1, 1],\r\n        [1, 1, 1, 1, 1, 1, 1, 0],\r\n        [1, 1, 1, 1, 1, 1, 0, 0],\r\n    ];\r\n    drawPixels(x + 70 * FrameRender_1.pixelSize, y, text);\r\n}\r\nexports.drawGameOver = drawGameOver;\r\nfunction drawStart() {\r\n    var image = document.getElementById(\"source\");\r\n    FrameRender_1.ctx.drawImage(image, 0, 0);\r\n}\r\nexports.drawStart = drawStart;\r\nfunction drawPixels(x, y, arr) {\r\n    for (var yVal = 0; yVal < arr.length; yVal++) {\r\n        for (var xVal = 0; xVal < arr[yVal].length; xVal++) {\r\n            if (arr[yVal][xVal] == 1) {\r\n                FrameRender_1.ctx.fillStyle = FrameRender_1.numbersColor;\r\n                FrameRender_1.ctx.fillRect(x + xVal * FrameRender_1.pixelSize, y + yVal * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://missile-command/./src/Scoreboard.ts?");

/***/ }),

/***/ "./src/Triangle.ts":
/*!*************************!*\
  !*** ./src/Triangle.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.drawTriangle = exports.createTriangle = void 0;\r\nvar FrameRender_1 = __webpack_require__(/*! ./FrameRender */ \"./src/FrameRender.ts\");\r\nvar DefaultFunctions_1 = __webpack_require__(/*! ./DefaultFunctions */ \"./src/DefaultFunctions.ts\");\r\nvar World_1 = __webpack_require__(/*! ./World */ \"./src/World.ts\");\r\nfunction createTriangle() {\r\n    if (FrameRender_1.triangles.length < 4) {\r\n        var trinagleStartX = Math.floor((0, DefaultFunctions_1.getRandomInt)(3 * FrameRender_1.pixelSize, FrameRender_1.canvas.width - 3 * FrameRender_1.pixelSize) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n        FrameRender_1.triangles.push({\r\n            startX: trinagleStartX,\r\n            startY: 112,\r\n            currentX: trinagleStartX,\r\n            currentY: 112,\r\n            targetX: FrameRender_1.targetsX[Math.floor(Math.random() * FrameRender_1.targetsX.length)] + 5 * FrameRender_1.pixelSize,\r\n            targetY: Math.floor((FrameRender_1.targetsY - 3 * FrameRender_1.pixelSize) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize + 1 / 2 * FrameRender_1.pixelSize,\r\n            alive: true\r\n        });\r\n    }\r\n}\r\nexports.createTriangle = createTriangle;\r\nfunction drawTriangle() {\r\n    FrameRender_1.triangles.forEach(function (element) {\r\n        var angle = (0, DefaultFunctions_1.angleFromStartToTarget)(element.currentX, element.currentY, element.targetX, element.targetY);\r\n        element.currentX += FrameRender_1.triangleSpeed * Math.sin(angle);\r\n        element.currentY += FrameRender_1.triangleSpeed * -Math.cos(angle);\r\n        var x = Math.floor(element.currentX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n        var y = Math.floor(element.currentY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize;\r\n        FrameRender_1.ctx.fillStyle = FrameRender_1.enemyObjectsColor;\r\n        FrameRender_1.ctx.fillRect(x - 2 * FrameRender_1.pixelSize, y - FrameRender_1.pixelSize, 5 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x - 1 * FrameRender_1.pixelSize, y, 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(x, y + FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        if (Math.abs((Math.floor(element.currentX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize) - (Math.floor(element.targetX / FrameRender_1.pixelSize) * FrameRender_1.pixelSize)) < FrameRender_1.pixelSize &&\r\n            Math.abs((Math.floor(element.currentY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize) - (Math.floor(element.targetY / FrameRender_1.pixelSize) * FrameRender_1.pixelSize)) < FrameRender_1.pixelSize) {\r\n            element.alive = false;\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[0])\r\n                (0, World_1.removeCity)(0);\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[1])\r\n                (0, World_1.removeCity)(1);\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[2])\r\n                (0, World_1.removeCity)(2);\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[3])\r\n                (0, FrameRender_1.destroySilo)();\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[4])\r\n                (0, World_1.removeCity)(3);\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[5])\r\n                (0, World_1.removeCity)(4);\r\n            if (element.targetX - 5 * FrameRender_1.pixelSize == FrameRender_1.targetsX[6])\r\n                (0, World_1.removeCity)(5);\r\n        }\r\n    });\r\n}\r\nexports.drawTriangle = drawTriangle;\r\n\n\n//# sourceURL=webpack://missile-command/./src/Triangle.ts?");

/***/ }),

/***/ "./src/Trigger.ts":
/*!************************!*\
  !*** ./src/Trigger.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.drawTriggers = void 0;\r\nvar FrameRender_1 = __webpack_require__(/*! ./FrameRender */ \"./src/FrameRender.ts\");\r\nfunction drawTriggers() {\r\n    FrameRender_1.triggers.forEach(function (element) {\r\n        FrameRender_1.ctx.fillStyle = FrameRender_1.cityColor;\r\n        FrameRender_1.ctx.fillRect(element.x, element.y, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(element.x - FrameRender_1.pixelSize, element.y - FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(element.x + FrameRender_1.pixelSize, element.y - FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(element.x - FrameRender_1.pixelSize, element.y + FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(element.x + FrameRender_1.pixelSize, element.y + FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    });\r\n}\r\nexports.drawTriggers = drawTriggers;\r\n\n\n//# sourceURL=webpack://missile-command/./src/Trigger.ts?");

/***/ }),

/***/ "./src/World.ts":
/*!**********************!*\
  !*** ./src/World.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nexports.__esModule = true;\r\nexports.drawRemoved = exports.removeCity = exports.createWorld = void 0;\r\nvar Boom_1 = __webpack_require__(/*! ./Boom */ \"./src/Boom.ts\");\r\nvar City_1 = __webpack_require__(/*! ./City */ \"./src/City.ts\");\r\nvar FrameRender_1 = __webpack_require__(/*! ./FrameRender */ \"./src/FrameRender.ts\");\r\nfunction createWorld() {\r\n    drawAir();\r\n    drawGround();\r\n    drawSilo();\r\n    if (!FrameRender_1.started) {\r\n        FrameRender_1.cities.push(new City_1.City(13 * FrameRender_1.pixelSize, FrameRender_1.targetsY));\r\n        FrameRender_1.cities.push(new City_1.City(32 * FrameRender_1.pixelSize, FrameRender_1.targetsY));\r\n        FrameRender_1.cities.push(new City_1.City(51 * FrameRender_1.pixelSize, FrameRender_1.targetsY));\r\n        FrameRender_1.cities.push(new City_1.City(98 * FrameRender_1.pixelSize, FrameRender_1.targetsY));\r\n        FrameRender_1.cities.push(new City_1.City(117 * FrameRender_1.pixelSize, FrameRender_1.targetsY));\r\n        FrameRender_1.cities.push(new City_1.City(136 * FrameRender_1.pixelSize, FrameRender_1.targetsY));\r\n    }\r\n    FrameRender_1.cities.forEach(function (el) { return el.drawCity(); });\r\n}\r\nexports.createWorld = createWorld;\r\nfunction drawSilo() {\r\n    if (FrameRender_1.siloIsAlive) {\r\n        FrameRender_1.ctx.fillStyle = FrameRender_1.worldColor;\r\n        FrameRender_1.ctx.fillRect(73 * FrameRender_1.pixelSize, FrameRender_1.targetsY - FrameRender_1.pixelSize, 15 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(74 * FrameRender_1.pixelSize, FrameRender_1.targetsY - 2 * FrameRender_1.pixelSize, 13 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(75 * FrameRender_1.pixelSize, FrameRender_1.targetsY - 3 * FrameRender_1.pixelSize, 11 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(76 * FrameRender_1.pixelSize, FrameRender_1.targetsY - 4 * FrameRender_1.pixelSize, 9 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(77 * FrameRender_1.pixelSize, FrameRender_1.targetsY - 5 * FrameRender_1.pixelSize, 7 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    }\r\n    else {\r\n        FrameRender_1.ctx.fillStyle = FrameRender_1.worldColor;\r\n        FrameRender_1.ctx.fillRect(73 * FrameRender_1.pixelSize, FrameRender_1.targetsY - FrameRender_1.pixelSize, 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(85 * FrameRender_1.pixelSize, FrameRender_1.targetsY - FrameRender_1.pixelSize, 3 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(86 * FrameRender_1.pixelSize, FrameRender_1.targetsY - 2 * FrameRender_1.pixelSize, FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillStyle = FrameRender_1.airColor;\r\n        FrameRender_1.ctx.fillRect(76 * FrameRender_1.pixelSize, FrameRender_1.targetsY, 8 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n        FrameRender_1.ctx.fillRect(78 * FrameRender_1.pixelSize, FrameRender_1.targetsY + FrameRender_1.pixelSize, 4 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    }\r\n}\r\nfunction drawGround() {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.worldColor;\r\n    FrameRender_1.ctx.fillRect(0, FrameRender_1.targetsY, FrameRender_1.canvas.width, FrameRender_1.canvas.height - FrameRender_1.targetsY);\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.airColor;\r\n    FrameRender_1.ctx.fillRect(13 * FrameRender_1.pixelSize, FrameRender_1.targetsY, 12 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(32 * FrameRender_1.pixelSize, FrameRender_1.targetsY, 12 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(51 * FrameRender_1.pixelSize, FrameRender_1.targetsY, 12 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(98 * FrameRender_1.pixelSize, FrameRender_1.targetsY, 12 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(117 * FrameRender_1.pixelSize, FrameRender_1.targetsY, 12 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n    FrameRender_1.ctx.fillRect(136 * FrameRender_1.pixelSize, FrameRender_1.targetsY, 12 * FrameRender_1.pixelSize, FrameRender_1.pixelSize);\r\n}\r\nfunction drawAir() {\r\n    FrameRender_1.ctx.fillStyle = FrameRender_1.airColor;\r\n    FrameRender_1.ctx.fillRect(0, 0, FrameRender_1.canvas.width, FrameRender_1.canvas.height);\r\n}\r\nfunction removeCity(num) {\r\n    if (num < 3)\r\n        (0, Boom_1.generateEnemyBoom)(FrameRender_1.targetsX[num] + 6 * FrameRender_1.pixelSize, Math.floor((FrameRender_1.targetsY - 3 * FrameRender_1.pixelSize) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize + 1 / 2 * FrameRender_1.pixelSize);\r\n    else\r\n        (0, Boom_1.generateEnemyBoom)(FrameRender_1.targetsX[num + 1] + 6 * FrameRender_1.pixelSize, Math.floor((FrameRender_1.targetsY - 3 * FrameRender_1.pixelSize) / FrameRender_1.pixelSize) * FrameRender_1.pixelSize + 1 / 2 * FrameRender_1.pixelSize);\r\n    FrameRender_1.cities[num].alive = false;\r\n}\r\nexports.removeCity = removeCity;\r\nfunction drawRemoved() {\r\n    FrameRender_1.cities.forEach(function (element) {\r\n        if (element.alive == false)\r\n            element.destroyCity();\r\n    });\r\n}\r\nexports.drawRemoved = drawRemoved;\r\n\n\n//# sourceURL=webpack://missile-command/./src/World.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/Main.ts");
/******/ 	
/******/ })()
;